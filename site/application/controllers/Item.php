<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Item extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Item_model');
    } 

    /*
     * Listing of items
     */
    function index()
    {
        $data['items'] = $this->Item_model->get_all_items();
        
        $data['_view'] = 'item/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new item
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('ItemQuantity','ItemQuantity','greater_than[0]|required');
		$this->form_validation->set_rules('ItemName','ItemName','min_length[5]|required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'ItemName' => $this->input->post('ItemName'),
				'ItemDescription' => $this->input->post('ItemDescription'),
				'ItemQuantity' => $this->input->post('ItemQuantity'),
            );
            
            $item_id = $this->Item_model->add_item($params);
            redirect('item/index');
        }
        else
        {            
            $data['_view'] = 'item/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a item
     */
    function edit($ItemId)
    {   
        // check if the item exists before trying to edit it
        $data['item'] = $this->Item_model->get_item($ItemId);
        
        if(isset($data['item']['ItemId']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('ItemQuantity','ItemQuantity','greater_than[0]|required');
			$this->form_validation->set_rules('ItemName','ItemName','min_length[5]|required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'ItemName' => $this->input->post('ItemName'),
					'ItemDescription' => $this->input->post('ItemDescription'),
					'ItemQuantity' => $this->input->post('ItemQuantity'),
                );

                $this->Item_model->update_item($ItemId,$params);            
                redirect('item/index');
            }
            else
            {
                $data['_view'] = 'item/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The item you are trying to edit does not exist.');
    } 

    /*
     * Deleting item
     */
    function remove($ItemId)
    {
        $item = $this->Item_model->get_item($ItemId);

        // check if the item exists before trying to delete it
        if(isset($item['ItemId']))
        {
            $this->Item_model->delete_item($ItemId);
            redirect('item/index');
        }
        else
            show_error('The item you are trying to delete does not exist.');
    }
    
}
