<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Supplyer extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Supplyer_model');
    } 

    /*
     * Listing of supplyers
     */
    function index()
    {
        $data['supplyers'] = $this->Supplyer_model->get_all_supplyers();
        
        $data['_view'] = 'supplyer/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new supplyer
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('SupplyerName','SupplyerName','required|min_length[5]');
		$this->form_validation->set_rules('SupplyerPhone','SupplyerPhone','required|min_length[5]');
		$this->form_validation->set_rules('SupplyerAddress','SupplyerAddress','required|min_length[5]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'SupplyerName' => $this->input->post('SupplyerName'),
				'SupplyerAddress' => $this->input->post('SupplyerAddress'),
				'SupplyerPhone' => $this->input->post('SupplyerPhone'),
            );
            
            $supplyer_id = $this->Supplyer_model->add_supplyer($params);
            redirect('supplyer/index');
        }
        else
        {            
            $data['_view'] = 'supplyer/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a supplyer
     */
    function edit($SupplyerId)
    {   
        // check if the supplyer exists before trying to edit it
        $data['supplyer'] = $this->Supplyer_model->get_supplyer($SupplyerId);
        
        if(isset($data['supplyer']['SupplyerId']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('SupplyerName','SupplyerName','required|min_length[5]');
			$this->form_validation->set_rules('SupplyerPhone','SupplyerPhone','required|min_length[5]');
			$this->form_validation->set_rules('SupplyerAddress','SupplyerAddress','required|min_length[5]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'SupplyerName' => $this->input->post('SupplyerName'),
					'SupplyerAddress' => $this->input->post('SupplyerAddress'),
					'SupplyerPhone' => $this->input->post('SupplyerPhone'),
                );

                $this->Supplyer_model->update_supplyer($SupplyerId,$params);            
                redirect('supplyer/index');
            }
            else
            {
                $data['_view'] = 'supplyer/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The supplyer you are trying to edit does not exist.');
    } 

    /*
     * Deleting supplyer
     */
    function remove($SupplyerId)
    {
        $supplyer = $this->Supplyer_model->get_supplyer($SupplyerId);

        // check if the supplyer exists before trying to delete it
        if(isset($supplyer['SupplyerId']))
        {
            $this->Supplyer_model->delete_supplyer($SupplyerId);
            redirect('supplyer/index');
        }
        else
            show_error('The supplyer you are trying to delete does not exist.');
    }
    
}
